# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions: write-all

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: jpackage

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ matrix.os }}_${{ steps.vars.outputs.sha_short }}
          title: ${{ matrix.os }}_${{ steps.vars.outputs.sha_short }} Development Build
          prerelease: true
          files: |
            LICENSE.txt
            ./build/jpackage/*.pkg
            ./build/jpackage/*.dmg
            ./build/jpackage/*.exe
            ./build/jpackage/*.msi
          
